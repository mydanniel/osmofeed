<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mydanniel.github.io/osmofeed/index.html</id>
    <title>osmos::feed</title>
    <updated>2024-03-11T01:13:19.948Z</updated>
    <generator>osmosfeed 1.15.1</generator>
    <link rel="alternate" href="https://mydanniel.github.io/osmofeed/index.html"/>
    <link rel="self" href="https://mydanniel.github.io/osmofeed/feed.atom"/>
    <entry>
        <title type="html"><![CDATA[一个六岁开源项目的崩溃与新生]]></title>
        <id>10-2532</id>
        <link href="https://xlog.app/api/redirection?characterId=10&amp;noteId=2532"/>
        <updated>2024-03-10T19:29:05.000Z</updated>
        <summary type="html"><![CDATA[我有一个维护了六年的开源项目 —— RSSHub，它正在面临崩溃
背景#
表面上，它有接近 30k Stars、900 多 Contributors、每月 3 亿多次请求和数不清的用户、每月几十刀的赞助、有源源不断的 issue 和 pr、代码几乎每天更新，非常健康和充满活力，但在不可见的地方，持续数年高昂的维护时间成本、每月一千多刀的服务器费用、每天重复繁琐且逐渐积累的维护工作，都让它在崩溃的边缘反复横跳
项目是六年前开发的，不少当时以 Next Generation 为口号的时髦 Node.js 技术栈和依赖库已经成为时代眼泪，现在看非常陈旧，很多现在流行的新技术没法应用，比如 JSX、TypeScript、Serverless 等；它的架构也非常不合理，每个路由的信息散落在多个地方，开发或者变更一个路由需要多处修改，一个地方去注册路由，一个地方去编写路由脚本，一个地方去编写 Radar 规则，一个地方去编写文档...... 这增加了很多工作量，也很容易出错，之前路由少的时候并不是个问题，但现在已经变得难以忍受
在如此糟糕的基础架构下能保持现状已经是竭尽全力，开发新功能更是无本之木，只会增加以后更新的难度，所以我有时候脑子蹦出的新奇想法也很难实现
要解决这些问题，唯一的办法是使用现代化的框架和新设计的架构来重写内核，但随着路由越来越多，改造成本也越来越高，每个基础改动可能都需要多达数月的工作量，所以虽然问题越来越严重，但秉承着又不是不能用的原则一拖再拖
但这又是不得不做的事情，所以我抽空花了几个月的时间重新设计和重写了它
技术栈更新#
koa -> Hono#
第一步也是最基础和难度最大的是换掉之前使用的 Web 框架 koa，作为六年前流行的下一代 Web 框架，作者早就弃坑了，调研之后决定换用对  JSX、TypeScript、Serverless 支持最好的 Ho…]]></summary>
        <author>
            <name>Hi, DIYgod</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[和帕鲁生活在一起的两周]]></title>
        <id>10-2510</id>
        <link href="https://xlog.app/api/redirection?characterId=10&amp;noteId=2510"/>
        <updated>2024-02-18T19:20:33.000Z</updated>
        <summary type="html"><![CDATA[宝可梦幻想#

哪个小男孩没幻想过生活在这样一个充满宝可梦伙伴的世界，它们能听懂且愿意倾听我们说话，有着不同的特点和强大的技能，而且都很可爱，我们可以跟它们睡觉吃饭、并肩作战探索世界，永远不再孤独，不管是谁都可以找到最适合自己的宝可梦
这一切早就可以发生，但这一切终究没有发生，宝可梦复杂的版权问题和躺平在功劳簿上的版权公司 Game Freak 让我们的幻想一直也仅仅是幻想
当然也有人说最近的几个新作阿尔宙斯、朱紫比之前好多了，“虽然好多了，但只是臭味稀薄一点的狗屎罢了”，剑盾、阿尔宙斯、朱紫、Pokemon Sleep 游戏时长并不短的宝可梦玩家 DIYgod 义愤填膺地说道
帕鲁实现#

但只要幻想一直存在，变成现实也只是时间问题，横空出世的幻兽帕鲁给所有宝可梦粉丝带来了一个一本满足的平行幻想世界，终于苦于没有 Windows 的我也专门买了一台 ROG Ally 来沉迷其中
游戏中与帕鲁的互动是前无仅有的，衣食住行战斗探索的过程都与帕鲁深度融入，真的是和帕鲁生活在一起
从刚落地进入初始台地互动就开始了，我们的第一个落脚点不是自己造的，而是跟捣蛋猫一起造的


再到后来帕鲁包办我们的一切后勤，我们的每一顿大餐，都需要经历播种、浇水、收割、搬运、存储、烹饪，分别由有着不同特长和分工的帕鲁来完成，会制冷的企丸丸去运行冰箱，会喷火的燎火鹿去烹饪


在我们外出探索时，过河骑滑水蛇，赶路骑云海鹿，翻山越岭骑烽歌龙


在我们战斗时，举着火绒狐充当、喷火器，骑着暴电熊扫射机关枪，甚至虽然不太人道，可以把电棘鼠当作手榴弹扔出去，同时据点里的焰煌在帮我们炼钢造枪，阿努比斯在帮我们手搓子弹


从徒手撸树到机关枪横着走，从无人问津到人满为患，在不知不觉的建造中我已经在帕鲁世界中倾注了太多的感情
从饿着肚子的第一天

到现在


一些额外的探索#
数据展示#

毕竟是单机游戏，数据都在本地，可以很方便地做处理
有一个开源项目可以把存档文件解析成 JSON 方便第三方开发和展示 https://github.com/cheahjs/palworld-save-tools
还有一个开源项目可以把 JSON 再生成一个前端页面 https://github.com/zaigie/palworld-server-tool
于是我把存档同步到 NAS 上，再在 NAS 上部署一个展示页面，就可以很方便地查看我的帕鲁们了 https://pal.diygod.me
模组#
帕鲁有很丰富的社区模组，比如把皮皮鸡变成坤或者把帕鲁变成宝可梦什么的，还有一些可以在不影响游戏平衡的前提下极大提升游戏体验
我用的主要来自一个模组社区 Nexus Mods，他们有一个很方便的模组安装和管理工具 Vortex Mod Manager，以下是我正在使用的模组


Basic MiniMap：增加一个不知道为什么官方没做的感觉很基础的小地图功能，但是记得到设置里把旋转关掉


Better Night Light：晚上太眼瞎了，啥都看不见，像得了夜盲症一样，用这个模组可以变亮一些，还改了一个绝美的星空



Golden Statue of Power：把力量石像变得金灿灿的更有质感



Play as Zoe 和 Hide All Human Hair All female Head All HeadEquip：隐藏掉原有的装扮，自己变成老婆佐伊


Paimon Replace DaeDream：把寐魔变成派蒙



Pal Analyzer：捕捉前就可以看到帕鲁的属性和特质，掌机需要到设置里改下显示为 always on



Stuck Pal Rescuer：救命模组，据点里的帕鲁经常被 bug 卡住然后饿死，这个模组可以自动检测帕鲁是否卡住并重置


FSR3 支持：官方不支持 A 卡的帧生成，用上这个 Roy Ally 可以在中等画质从 40 多帧提升到 70 多帧]]></summary>
        <author>
            <name>Hi, DIYgod</name>
        </author>
    </entry>
</feed>